{
	// Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"SPLTF_controller": {
		"prefix": "controller",
		"body": [
			"export const ${1:MyController} = () => {",
			"\t$2",
			"}"
		],
		"description": ""
	},

	"SPLTF_import_controller": {
		"prefix": "import-controller",
		"body": [
			"import { ${1:MyController} } from './controllers/${1:MyController}';",
			"\t$2"
		],
		"description": ""
	},

	"SPLTF_enquire": {
		"prefix": "enquire",
		"body": [
			"enquire.register(\"screen and (${1:max}-width: ${2:768px})\", {",
			"\tmatch: () => {",
			"\t\t$3",
			"\t},",
			"\tunmatch: () => {",
			"\t\t$4",
			"\t},",
			"});",
		],
		"description": ""
	},

	"SPLTF_function": {
		"prefix": "func",
		"body": [
			"const ${1:MyFunction} = ($2) => {",
			"\t$3",
			"};",
		],
		"description": ""
	},

	"SPLTF_$click": {
		"prefix": "$click",
		"body": [
			"${1:$$btn}.click((e) => {",
			"\te.preventDefault();",
			"\tconst $$this = $(e.currentTarget);",
			"\t$2",
			"};",
		],
		"description": "jQuery Click"
	},

	"SPLTF_$on": {
		"prefix": "$on",
		"body": [
			"${1:$$btn}.on('${2:click}', (e) => {",
			"\te.preventDefault();",
			"\tconst $$this = $(e.currentTarget);",
			"\t$3",
			"};",
		],
		"description": "jQuery On"
	},

	"SPLTF_$each": {
		"prefix": "$each",
		"body": [
			"${1:$$array}.each((i, el) => {",
			"\tconst $$this = $(el);",
			"\t$2",
			"};",
		],
		"description": "jQuery Each"
	},

	"SPLTF_getElementById": {
		"prefix": "getElementById",
		"body": [
			"${1:document}.getElementById('${2:id}');",
		],
		"description": "js getElementById"
	},

	"SPLTF_querySelector": {
		"prefix": "querySelector",
		"body": [
			"${1:document}.querySelector('${2:selector}');",
		],
		"description": "js querySelector"
	},

	"SPLTF_querySelectorAll": {
		"prefix": "querySelectorAll",
		"body": [
			"${1:document}.querySelectorAll('${2:selector}');",
		],
		"description": "js querySelectorAll"
	},

	"SPLTF_const": {
		"prefix": "const",
		"body": [
			"const ${1:name}: ${2:value};",
		],
		"description": "js const"
	},

	"SPLTF_let": {
		"prefix": "let",
		"body": [
			"let ${1:name}: ${2:value};",
		],
		"description": "js let"
	}
}